/* .canvas { */
/*   margin: auto; */
/*   border: 2px solid grey; */
/* } */

svg {
  background: #eee;
  border: 2px solid black;
}

.canvas > g {
  transform: scaleY(-1) translate(0, -100%);
  /* scaleY(-1); */
}

/* text of svg should be re-flip to normal */
/* Note use of selector between g and canvas : a g that descends directly from canva */
/*   nothing (space selector) between g and text : a text that descends (depthly) from g  */
.canvas > g text {
  transform: scaleY(-1);
}

.area {
  fill: #88a8af;
  /* background-color: #88a8af; */
}

.agent {
  fill: gold;
  stroke-width: 0.1;
  stroke: black;
  transition: fill 1s ease;
}

.landmark_true_group {
  stroke-width: 0.1;
  stroke: gold;
  fill: #30ad8d;
}

/* .agent:hover { */
/*   fill: indigo; */
/*   cursor: pointer; */
/* } */

/* test */
.agent_true_group polygon:hover {
  fill: lightblue;
  cursor: pointer;
}

.agent_true_group line {
  stroke-width: 0.3;
  stroke: yellow;
}

.agent_true_group#r1 line {
  stroke: red;
}
.agent_true_group#r2 line {
  stroke: blue;
}
.agent_true_group#r3 line {
  stroke: green;
}

/* any descendant polygon of those */
.agent_true_group polygon {
  stroke: black;
  stroke-width: 0.1;
  fill: silver;
}

/* specialization for the selected agent */
.agent_true_group.selected polygon {
  fill: goldenrod;
}

.agent_true_group .sensor {
  fill: #b8e5ef;
  opacity: 0.25;
}
.agent_true_group.selected .sensor {
  opacity: 0.6;
}

/* graph test: TODO: remove */
.vertex circle {
  fill: #e3e3e3;
  stroke: black;
  stroke-width: 0.1;
}
.vertex text {
  font-family: Monospace;
  /* font-size: 7%; */
  /* text-anchor: "middle"; */
  /* stroke: "red"; */
  /* stroke-width: "1px"; */
  /* alignment-baseline: "middle"; */
}

.edge {
  stroke: black;
  stroke-width: 0.15;
}
